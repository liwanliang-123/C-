// 静态成员就是在成员变量和成员函数前加上关键字static，称为静态成员。

// 静态成员分为：
//     静态成员变量
//         所有对象共享同一份数据；
//         在编译阶段分配内存；
//         类内声明，类外初始化。
//====================================================
// 静态成员变量不属于某个对象，所有对象共享同一份数据
// 因此静态成员变量有两种访问方式:
//      1、通过对象进行访问

//      2、通过类名进行访问


#include <iostream>
using namespace std;

class Person {
public:

//静态成员变量，
//所有对象共享，
//在编译阶段分配内存，
//类内声明，类外初始化,不然不能访问这块内存
    static int p_A;

private: //静态成员变量也是有访问权限的
    static int p_B;
};

//类内声明，类外初始化
int Person::p_A = 100;
int Person::p_B = 500;

void test01()
{
    Person P1;
    cout << "P1_a = " << P1.p_A << endl;
    
    Person P2;
    P2.p_A = 200; //所有对象共享，在这里修改了前面也就变了
    cout << "P1_a = " << P1.p_A << endl;

//=========================================

    // 1、通过对象进行访问
    cout << "对象 P1_a = " << P1.p_A << endl;
    //2、通过类名访问静态成员变量
	cout << "类名 P1_A = " << Person::p_A << endl;

//===========================================

    //cout << "P_B = " << Person::p_B << endl;  //类外访问不到私有的静态成员变量
}

int main()
{
    test01();

    return 0;
}